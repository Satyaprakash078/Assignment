// json:
// {
//     "_id": ObjectId("..."),
//     "date": ISODate("2024-06-15T00:00:00Z"),
//     "store": "Store A",
//     "items": [
//         {
//             "name": "item1",
//             "quantity": 5,
//             "price": 10.0
//         },
//         {
//             "name": "item2",
//             "quantity": 3,
//             "price": 20.0
//         }


// Your task is to write an aggregation pipeline to calculate the total revenue generated by each store for each month, along with the average price of items sold. The result should be sorted first by store and then by month (in ascending order).


db.sales.aggregate([
    { $unwind: "$items" },

    {
        $project: {
            store: 1,
            month: { $dateToString: { format: "%Y-%m", date: "$date" } },
            revenue: { $multiply: ["$items.quantity", "$items.price"] },
            price: "$items.price"
        }
    },

    {
        $group: {
            _id: { store: "$store", month: "$month" },
            totalRevenue: { $sum: "$revenue" },
            averagePrice: { $avg: "$price" }
        }
    },

    {
        $project: {
            _id: 0,
            store: "$_id.store",
            month: "$_id.month",
            totalRevenue: 1,
            averagePrice: 1
        }
    },

    { $sort: { store: 1, month: 1 } }
]);
